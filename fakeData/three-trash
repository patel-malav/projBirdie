// import { Injectable, NgZone, OnDestroy } from "@angular/core";
// import {
//   WebGLRenderer,
//   PerspectiveCamera,
//   Scene,
//   AmbientLight,
//   BoxGeometry,
//   MeshBasicMaterial,
//   Mesh
// } from "three";
// import { OrbitControls } from "three/examples/jsm/controls/OrbitControls";

// @Injectable({
//   providedIn: "root"
// })
// export class ExploreService implements OnDestroy {
//   public canvas: HTMLCanvasElement;
//   private renderer: WebGLRenderer;
//   private camera: PerspectiveCamera;
//   private scene: Scene;
//   private light: AmbientLight;
//   private control: OrbitControls;

//   private frameId: number = null;

//   constructor(private ngZone: NgZone) {
//     // Root Scene
//     this.scene = new Scene();

//     // Creating Camera
//     {
//       let fov = 75, // field of view angle
//         aspect = 2, // Width / Height
//         near = 1, // nearest distance to render from origin
//         far = 25; // farthest distance to render from origin
//       this.camera = new PerspectiveCamera(fov, aspect, near, far);

//       // Cartesian coordinates.
//       let x = 0,
//         y = 0,
//         z = 20;
//       this.camera.position.set(x, y, z);
//       this.scene.add(this.camera);
//     }

//     // Ambient Light
//     {
//       let color = 0xffffff; // light color
//       this.light = new AmbientLight(color);
//       // Cartesian coordinates.
//       let x = 0,
//         y = 0,
//         z = 20;
//       this.light.position.set(x, y, z);
//       this.scene.add(this.light);
//     }

//     this.init();

//     // this.ngZone.runOutsideAngular(() => {
//     //   window.addEventListener("resize", () => {
//     //     this.resize();
//     //   });
//     // });
//   }

//   ngOnDestroy(): void {
//     this.stop();
//   }

//   public start(): void {
//     this.ngZone.runOutsideAngular(() => {
//       if (document.readyState !== "loading") {
//         this.render();
//       } else {
//         window.addEventListener("DOMContentLoaded", () => {
//           this.render();
//         });
//       }
//       window.addEventListener("resize", () => {
//         this.resize();
//       });
//     });
//   }

//   public stop(): void {
//     if (this.frameId !== null) {
//       cancelAnimationFrame(this.frameId);
//     }
//   }

//   private init(): void {
//     this.renderer = new WebGLRenderer({
//       alpha: true,
//       antialias: true
//     });
//     this.canvas = this.renderer.domElement;
//     this.renderer.setClearColor(0x000000, 0);
//     this.renderer.setPixelRatio(window.devicePixelRatio);
//     this.renderer.setSize(this.canvas.width, this.canvas.height, false);
//     // Creating Orbit Control
//     {
//       let camera = this.camera, // Camera
//         domEle = this.canvas; // Movement Control Element
//       this.control = new OrbitControls(camera, domEle);
//       this.control.maxDistance = 25;
//       this.control.minDistance = 15;
//       // this.control.autoRotate = true;
//       // this.control.autoRotateSpeed = 1;
//       this.control.enableKeys = false;
//       // this.control.enableZoom = false;
//       this.control.enablePan = false;
//       this.control.enableDamping = true;
//       this.control.zoomSpeed = 0.4;
//     }
//   }

//   private render(): void {
//     this.frameId = requestAnimationFrame(() => {
//       this.render();
//     });

//     // this.control.update();
//     this.renderer.render(this.scene, this.camera);
//   }

//   private resize(): void {
//     if (this.canvas) {
//       const width = this.canvas.width;
//       const height = this.canvas.height;
//       this.camera.aspect = width / height;
//       this.camera.updateProjectionMatrix();
//       this.renderer.setSize(width, height, false);
//     }
//   }

//   public test(): void {
//     let geometry = new BoxGeometry(5, 5, 5);
//     let material = new MeshBasicMaterial({ color: 0x00ff00 });
//     let mesh = new Mesh(geometry, material);
//     this.scene.add(mesh);
//     console.log(`test works......`);
//   }
// }
